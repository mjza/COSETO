order,attribute,definition,related_words
1,reliability,"the probability that a software product will perform its specified functions correctly and continuously, without failure or unexpected behaviour, for a designated period of time and under defined operating conditions. ","{stability,fault tolerance,robustness,workload,tradeoff,bottlenecks,trustworthiness}"
2,documentation quality,"the degree to which a software product’s supporting materials are accurate, complete, clear, up‑to‑date, and easy for their intended audience to use when installing, operating, maintaining, or enhancing the product.","{readability,accuracy,clarity,documentation,specification,manual}"
3,security,the protection from unauthorized access.,"{policy,protection,trust,restrictions,secure,authentication}"
4,cost,"the total cost of ownership, which includes the cost to integrate, test and maintain of the software.","{price,costs,expense}"
5,usability,"a set of attributes related to the effort needed to use the component, like whether the component is understandable, learnable, and operable.","{ease of use,understandability,learnability,operable,operability,learnable,understandable,code quality}"
6,efficiency,the appropriate ability of a component which is needed to fulfill customer needs.,"{significantly,improvement,complexity,performance,optimization}"
7,architecture,the high‑level structure of a software system that organizes its components and specifies how they interact.,"{architectural,platform,technology,infrastructure,hardware,platforms,core,frameworks,structure}"
8,adaptability,"the capability of a software system to be efficiently modified, configured, or extended to accommodate different environments, workflows, or user preferences without core redesign.","{customizability,flexibility,flexible,freedom,modifiability,extensibility,configurability}"
9,scalability,the potential for the product to be enlarged to accommodate growth with relative ease. A component is said to be scalable when its performance is unaffected by an enhanced input load.,"{scalable,elasticity,expandability,load‑resilience,capacity}"
10,functionality,"the factor of quality which is being useful, functional and workable, it means that the functionality and service of a software component should be according to the requirement of both system and customers.","{feature,ability,implement,capability,capabilities,mechanism}"
11,license,"a legal agreement that grants specific rights to use, copy, modify, or distribute software.","{type of license,license compliance requirements,commercial,enterprise,licensing,vendor,open-source,proprietary,copyright,copyleft,source‑code disclosure,usage limits,royalty payments}"
12,availability,"the fraction of time for which the software is working and functional. It can be affected by component load, errors, and malicious attacks.","{health,charge,connectivity,latency,monitoring,networks,policies}"
13,safety,"the ability of a software component to operate without causing, triggering, or exacerbating hazardous conditions, thereby avoiding unacceptable risk of harm to people, data, equipment, or the environment under its specified operating conditions.","{hazard free,fail safe,protection,integrity}"
14,testability,"the process of how easily a software component can be tested. Testability of a component is determined by the factors such as understandability, observability and controllability.","{modularity,decoupling,cohesion,robustness,observability,controllability,understandability,verifiability,diagnosability,unit test,test driven,test,examin,evaluate}"
15,execution time,"the expected duration a software component takes to complete its tasks, calculated as the weighted average of the execution times of individual components.","{running time,CPU time,elapsed time,processing time,calculation time}"
16,reusability,"the extent to which parts of a software can be reused in other applications. Software reuse means to abstract the general logic from different applications, implement the logic, and be used into more applications with slight or no modification.","{modularity,reuse}"
17,maintainability,"the ability of the software component to be modified which generally includes corrections, improvements or adaptation to environmental changes, and relative ease of testing to determine bugs.","{maintain,modifiability,modify,modifi,updatability,evolvability,changeability,serviceability,reparability}"
18,compatibility,"capacity to operate, exchange data, and coexist smoothly with other components, versions, or external systems.","{compatible,supporting,modern,older,major,standards,newer,supported,interoperability,coexistence,integration,conformance,alignment}"
19,dependability,the extent to which a software component relies on other components or external services to fulfil its own functionality.,"{coupling,dependency,reliance,interdependency,integration}"
20,maturity,"the extent to which a software component has been proven, through sustained use and refinement, to deliver reliable, fault‑free operation under normal conditions.","{readiness,adoption,innovation,evolution}"